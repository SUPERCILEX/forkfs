pub mod forkfs
pub enum forkfs::Error
pub forkfs::Error::InvalidArgument
pub forkfs::Error::Io
pub forkfs::Error::NotRoot
pub forkfs::Error::SessionNotFound
pub forkfs::Error::SetupRequired
impl core::error::Error for forkfs::Error
impl core::fmt::Debug for forkfs::Error
pub fn forkfs::Error::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::fmt::Display for forkfs::Error
pub fn forkfs::Error::fmt(&self, __formatter: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for forkfs::Error
impl core::marker::Send for forkfs::Error
impl core::marker::Sync for forkfs::Error
impl core::marker::Unpin for forkfs::Error
impl core::panic::unwind_safe::RefUnwindSafe for forkfs::Error
impl core::panic::unwind_safe::UnwindSafe for forkfs::Error
impl<C> error_stack::context::Context for forkfs::Error where C: core::error::Error + core::marker::Send + core::marker::Sync + 'static
pub fn forkfs::Error::provide<'a>(&'a self, request: &mut core::error::Request<'a>)
impl<T, U> core::convert::Into<U> for forkfs::Error where U: core::convert::From<T>
pub fn forkfs::Error::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for forkfs::Error where U: core::convert::Into<T>
pub type forkfs::Error::Error = core::convert::Infallible
pub fn forkfs::Error::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for forkfs::Error where U: core::convert::TryFrom<T>
pub type forkfs::Error::Error = <U as core::convert::TryFrom<T>>::Error
pub fn forkfs::Error::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::string::ToString for forkfs::Error where T: core::fmt::Display + core::marker::Sized
pub fn forkfs::Error::to_string(&self) -> alloc::string::String
impl<T> core::any::Any for forkfs::Error where T: 'static + core::marker::Sized
pub fn forkfs::Error::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for forkfs::Error where T: core::marker::Sized
pub fn forkfs::Error::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for forkfs::Error where T: core::marker::Sized
pub fn forkfs::Error::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for forkfs::Error
pub fn forkfs::Error::from(t: T) -> T
pub enum forkfs::SessionOperand<'a, S: core::convert::AsRef<str>>
pub forkfs::SessionOperand::All
pub forkfs::SessionOperand::List(&'a [S])
impl<'a, S> core::marker::Freeze for forkfs::SessionOperand<'a, S>
impl<'a, S> core::marker::Send for forkfs::SessionOperand<'a, S> where S: core::marker::Sync
impl<'a, S> core::marker::Sync for forkfs::SessionOperand<'a, S> where S: core::marker::Sync
impl<'a, S> core::marker::Unpin for forkfs::SessionOperand<'a, S>
impl<'a, S> core::panic::unwind_safe::RefUnwindSafe for forkfs::SessionOperand<'a, S> where S: core::panic::unwind_safe::RefUnwindSafe
impl<'a, S> core::panic::unwind_safe::UnwindSafe for forkfs::SessionOperand<'a, S> where S: core::panic::unwind_safe::RefUnwindSafe
impl<T, U> core::convert::Into<U> for forkfs::SessionOperand<'a, S> where U: core::convert::From<T>
pub fn forkfs::SessionOperand<'a, S>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for forkfs::SessionOperand<'a, S> where U: core::convert::Into<T>
pub type forkfs::SessionOperand<'a, S>::Error = core::convert::Infallible
pub fn forkfs::SessionOperand<'a, S>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for forkfs::SessionOperand<'a, S> where U: core::convert::TryFrom<T>
pub type forkfs::SessionOperand<'a, S>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn forkfs::SessionOperand<'a, S>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> core::any::Any for forkfs::SessionOperand<'a, S> where T: 'static + core::marker::Sized
pub fn forkfs::SessionOperand<'a, S>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for forkfs::SessionOperand<'a, S> where T: core::marker::Sized
pub fn forkfs::SessionOperand<'a, S>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for forkfs::SessionOperand<'a, S> where T: core::marker::Sized
pub fn forkfs::SessionOperand<'a, S>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for forkfs::SessionOperand<'a, S>
pub fn forkfs::SessionOperand<'a, S>::from(t: T) -> T
pub fn forkfs::delete_sessions<S: core::convert::AsRef<str>>(sessions: forkfs::SessionOperand<'_, S>) -> error_stack::result::Result<(), forkfs::Error>
pub fn forkfs::list_sessions() -> error_stack::result::Result<(), forkfs::Error>
pub fn forkfs::run<T: core::convert::AsRef<std::ffi::os_str::OsStr>>(session: &str, command: &[T]) -> error_stack::result::Result<(), forkfs::Error>
pub fn forkfs::stop_sessions<S: core::convert::AsRef<str>>(sessions: forkfs::SessionOperand<'_, S>) -> error_stack::result::Result<(), forkfs::Error>
